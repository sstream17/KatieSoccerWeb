@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<div class="scoreboard">
    <div class="player-one-data">
        <div id="player-one-name">
            @PlayerOneName
        </div>
        <div id="player-one-score">
            @PlayerOneScore
        </div>
    </div>
    <div class="player-two-data">
        <div id="player-two-name">
            Player2
        </div>
        <div id="player-two-score">
            @PlayerTwoScore
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    private string PlayerOneName { get; set; }
    private int PlayerOneScore { get; set; }
    private int PlayerTwoScore { get; set; }
    private HubConnection connection;

    protected override async Task OnInitializedAsync()
    {
        PlayerOneName = await localStorage.GetItemAsync<string>(LocalStorageKeyConstants.NameKey);
        PlayerOneScore = 0;
        PlayerTwoScore = 0;

        connection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/game-hub"))
            .Build();

        connection.On<ScoreData>("ScoreReceived", (scoreData) =>
        {
            PlayerOneScore = scoreData.PlayerOneScore;
            PlayerTwoScore = scoreData.PlayerTwoScore;
            StateHasChanged();
        });

        await connection.StartAsync();
        await connection.InvokeAsync("JoinGame", Id);
    }
}
